public class DatabaseManager
{
    private string connectionString;

    public DatabaseManager(string connectionString)
    {
        this.connectionString = connectionString;
    }

    public async Task<int> ExecuteNonQueryAsync(string query, MySqlParameter[] parameters = null)
    {
        using (var connection = new MySqlConnection(connectionString))
        {
            await connection.OpenAsync();

            using (var command = new MySqlCommand(query, connection))
            {
                if (parameters != null)
                {
                    command.Parameters.AddRange(parameters);
                }

                return await command.ExecuteNonQueryAsync();
            }
        }
    }

    public async Task<DataTable> ExecuteQueryAsync(string query, MySqlParameter[] parameters = null)
    {
        using (var connection = new MySqlConnection(connectionString))
        {
            await connection.OpenAsync();

            using (var command = new MySqlCommand(query, connection))
            {
                if (parameters != null)
                {
                    command.Parameters.AddRange(parameters);
                }

                var dataTable = new DataTable();
                using (var adapter = new MySqlDataAdapter(command))
                {
                    await adapter.FillAsync(dataTable);
                }

                return dataTable;
            }
        }
    }
}
