<Button
    x:Class="WpfCtrls.ImgButton"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WpfCtrls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="imgButton"
    d:Height="26"
    d:Width="100"
    SnapsToDevicePixels="True"
    mc:Ignorable="d">

    <Button.Template>
        <ControlTemplate TargetType="{x:Type Button}">
            <Border
                x:Name="border"
                Padding="0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding CornerRadius}"
                DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImgButton}}}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                <StackPanel
                    x:Name="SPanel"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Orientation="{Binding Orientacion}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    <Image
                        x:Name="imgL"
                        Width="{Binding ImgAncho}"
                        Height="{Binding ImgAlto}"
                        Margin="{Binding ImgMargen}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        IsEnabled="{TemplateBinding IsEnabled}"
                        Source="{Binding ImgSource}"
                        Stretch="{Binding ImgStretch}" />
                    <ContentPresenter
                        x:Name="contentPresenter"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="False"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </StackPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="FontSize" Value="{Binding MouseOverFontSize, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="FontStyle" Value="{Binding MouseOverFontStyle, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="FontWeight" Value="{Binding MouseOverFontWeight, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}" />
                    <Setter TargetName="border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImgButton}}}" />
                    <Setter TargetName="border" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImgButton}}}" />
                    <Setter TargetName="border" Property="BorderThickness" Value="{Binding PressedBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImgButton}}}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="border" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImgButton}}}" />
                    <Setter TargetName="border" Property="BorderBrush" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImgButton}}}" />
                    <Setter TargetName="border" Property="BorderThickness" Value="{Binding PressedBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImgButton}}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>
</Button>